;;; TODO: add some description here

(defgroup org-page nil
  "Options for generating static pages using org-page."
  :tag "Org static page generator" :group 'org)

(defconst op/temp-buffer-name "*Org Page Output*"
  "Name of the temporary buffer used by org-page")

(defcustom op/repository-directory nil
  "The directory where org files stored, should be a git repository"
  :group 'org-page
  :type 'string)

(defcustom op/site-url nil
  "The domain name of entire site, it is recommended to assign with prefix
http:// or https://, http will be considered if not assigned."
  :group 'org-page :type 'string)

(defcustom op/site-main-title "org-page"
  "The main title of entire site."
  :group 'org-page :type 'string)

(defcustom op/site-sub-title "static site generator"
  "The subtitle of entire site."
  :group 'org-page :type 'string)

; TODO remove "TODO" in below string after rss feature implemented
(defcustom op/html-header-template
  "<h1><a href=\"/\">%m</a><a href=\"\">%s</a></h1>
   <nav id=\"main-nav\">
     <ul id=\"nav-list-main\">
       <li><a href=\"%t\" class=\"menu\">Tags</a></li>
       <li><a href=\"%a\" class=\"menu\">About</a></li>
     </ul>
   </nav>
   <nav id=\"sub-nav\" class=\"align-right\">
     <div class=\"social\">
         <a class=\"github\" title=\"GitHub\" href=\"%g\">GitHub</a>
         <!-- TODO: change the link below to proper value  -->
         <a class=\"rss\" title=\"RSS(TODO)\" href=\"TODO\">RSS</a>
     </div>
     <form class=\"search\" target=\"_blank\" method=\"get\" action=\"http://google.com/search\">
       <input type=\"hidden\" value=\"site:%u\" name=\"q\" />
       <input type=\"text\" class=\"align-right\" results=\"0\" name=\"q\" />
     </form>
   </nav>"
  "The template used to construct page header, below parameters can be used:
%m: the main title of entire site (defined by `op/site-main-title')
%s: the subtitle of entire site (defined by `op/site-sub-title')
%t: the path to root tag
%a: the path to about
%g: the github link (defined by `op/personal-github-link')
%u: the url of current site, used for search (defined by `op/site-url')"
  :group 'org-page :type 'string)

(defcustom op/theme-directory
  (concat (file-name-directory (or load-file-name
                                   (buffer-file-name))) "themes/")
  "The directory stores org-page styles/scripts/images."
  :group 'org-page :type 'string)

(defcustom op/theme 'default
  "The theme used for page generation."
  :group 'org-page :type 'symbol)

(defcustom op/css-list '("main.css")
  "CSS style file name list, will using uri \"/media/css/<name>\"."
  :group 'org-page :type 'list)

(defcustom op/meta-info "<div id=\"post-meta\">
  <span title=\"post date\" class=\"post-info\">%h</span>
  <span title=\"last modification date\" class=\"update-info\">%m</span>
  <span title=\"tags\" class=\"tags\">%t</span>
  <span title=\"author\" class=\"author\">%a</span>
</div>"
  "Meta info of current post, will be used to compose
`op/html-postamble-template', please see `op/html-postamble-template' for
detailed information."
  :group 'org-page :type 'string)

(defcustom op/comment "<section id=\"comment\">
  <h1 class=\"title\">Comments</h1>
  <div id=\"disqus_thread\"></div>
  <script type=\"text/javascript\">
    //var disqus_developer = 1;
    var disqus_identifier = \"%n\";
    var disqus_url = \"%u\";
    var disqus_shortname = '%s';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
      var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
      dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
      (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
  </script>
  <noscript>Please enable JavaScript to view the <a href=\"http://disqus.com/?ref_noscript\">comments powered by Disqus.</a></noscript>
  <a href=\"http://disqus.com\" class=\"dsq-brlink\">comments powered by <span class=\"logo-disqus\">Disqus</span></a>
</section>"
  "Comment section of current post, will be used to compose
`op/html-postamble-template', please see `op/html-postamble-template' for
detailed information."
  :group 'org-page :type 'string)

;; TODO author name
(defcustom op/footer "<div id=\"footer\">
  <p class=\"creator\">Generated by %c</p>
  <p class=\"copyright\">
    Copyright &copy; 2012 - 2013 <a href=\"mailto:%i\">%a</a>
    &nbsp;&nbsp;-&nbsp;&nbsp;
    Powered by <a href=\"https://github.com/kelvinh/org-page\" target=\"_blank\">org-page</a>
  </p>
</div>"
  "Footer of current post, will be used to compose
`op/html-postamble-template', please see `op/html-postamble-template' for
detailed information."
  :group 'org-page :type 'string)

(defcustom op/html-postamble-template (concat op/meta-info op/comment op/footer)
  "Template used to construct page footer, it is composed by `op/meta-info',
`op/comment' and `op/footer', since some pages do not need comments, so
the second component should be removed from these pages.
below parameter can be used:
%a: author's name
%c: creator versions (org/emacs versions)
%d: publish date
%e: author's email
%v: validation-link, will be replaced by `org-export-html-validation-link'

%h: last changed date (this change means meta change, not content change)
%m: last modified date
%t: tags of file, it will be expanded to the following format(assume the file
has tag tag1, tag2):
<a href=\"tag1-link\">tag1</a>, <a href=\"tag2-link\">tag2</a>
%n: javascript variable 'disqus_identifier' of current page
%u: javascript variable 'disqus_url' of current page
%s: javascript variable 'disqus_shortname' of current page
%i: author's email, the difference from %e is this one will keep the email
address unchanged, but %e will expand it to html tag <a href=\"mailto:\">
automatically."
  :group 'org-page :type 'string)

(defcustom op/email user-mail-address
  "Email address will be presented at the footer."
  :group 'org-page :type 'string)

(defcustom op/personal-github-link "https://github.com/kelvinh/org-page"
  "the personal github link"
  :group 'org-page :type 'string)

(defcustom op/personal-disqus-shortname nil
  "the personal disqus shortname"
  :group 'org-page :type 'string)

(provide 'op-vars)

;;; op-vars.el ends here
